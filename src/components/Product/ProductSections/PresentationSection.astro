---
export interface Props {
    imageUrl: string;
}

const { imageUrl } = Astro.props as Props;
---

<section class="product-presentation">
    <img src={'/assets/zeruanahasi_title.png'} alt="Product Title" />
    <div class="zoom-container">
        <div class="product-image">
            <div class="zoom-container">
                <img src={imageUrl} alt="Product Image" class="zoom-image" />
            </div>
        </div>
        <span class="zoom-cta">look closer</span>
    </div>
</section>

<style>
    .product-presentation {
        height: 100vh;
        display: flex;
        gap: 4rem;
        margin-bottom: 2rem;
        justify-content: center;
        align-items: center;
        visibility: hidden;
        opacity: 0;
        transition: opacity 1s ease-in;
    }

    .product-presentation.loaded {
        visibility: visible;
        opacity: 1;
    }

    .product-presentation img {
        width: 100%;
        height: auto;
        max-width: 600px;
    }

    .zoom-container {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
    }

    .product-image {
        position: relative;
        overflow: hidden;
        max-width: 600px;
        height: auto;
        transition: border 0.2s ease-out; /* Smooth transition for the border */
        border: 1px solid transparent; /* Default border color */
    }

    .product-image:hover {
        animation: border-color-animation 0.3s forwards; /* Apply animation on hover */
        border-radius: 8px;
    }

    .zoom-cta {
        position: absolute;
        bottom: -38px;

        background-color: var(--highlight-color);
        padding: 0.5rem 1rem;

        font-size: 1rem;
        font-weight: bold;
        color: #000;
        z-index: -1; /* Place it behind the image */
        transition: transform 0.5s ease;
    }

    .zoom-container:hover .zoom-cta {
        transform: translateY(-100%); /* Move the button down */
    }

    @keyframes border-color-animation {
        0% {
            border-color: transparent;
        }
        50% {
            border-color: var(--primary-color);
        }
        100% {
            border-color: var(--secondary-color);
        }
    }

    .zoom-container {
        position: relative;
    }

    .zoom-image {
        width: 100%;
        height: auto;
        transition: transform 1s ease-out; /* Smooth transition for zoom-out */
        transform-origin: center center;
    }

    .zoom-container:hover .zoom-image {
        transform: scale(1.6); /* Zoom level */
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const presentationSection = document.querySelector('.product-presentation');
        if (presentationSection) {
            presentationSection.classList.add('loaded'); // Add the "loaded" class once the DOM is ready
        }
    });
    document.addEventListener('DOMContentLoaded', () => {
        const zoomContainer = document.querySelector('.zoom-container');
        const zoomImage = document.querySelector('.zoom-image') as HTMLElement;

        if (zoomContainer && zoomImage) {
            zoomContainer.addEventListener('mousemove', (e) => {
                const rect = zoomContainer.getBoundingClientRect();
                let x = (((e as MouseEvent).clientX - rect.left) / rect.width) * 100;
                let y = (((e as MouseEvent).clientY - rect.top) / rect.height) * 100;

                // Clamp x and y values to ensure they stay within 0% to 100%
                x = Math.max(0, Math.min(100, x));
                y = Math.max(0, Math.min(100, y));

                zoomImage.style.transformOrigin = `${x}% ${y}%`;
            });

            zoomContainer.addEventListener('mouseleave', () => {
                zoomImage.style.transformOrigin = 'center center';
            });
        }
    });
</script>
